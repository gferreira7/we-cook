<div class="videos" style="width:100%; display:flex " >
  <div>
    {{#each videos}}
    <div videoId={{_id}} class='anim d-flex justify-content-evenly align-items-center' style='--delay: .4s; background-color: var(--video-bg); margin:1rem; '
      title="{{title}}" description="{{description}}" thumbnail="{{thumbnail}}" category="{{category}}">
      <div class="video anim" style="--delay: .4s"> <!--one video start-->
          <video muted="" style="width:100%; display:flex" height="100">
            <source  src="{{url}}" type="video/mp4">
          </video>
        </div>
        <div  style="display:inline ;">
        <div class="video-name">{{title}}</div>
        <div class="video-view">{{views}} views<span class="seperate video-seperate"></span>{{createdAt}}</div>
      </div>
    </div>
    {{/each}}
  </div>
</div>







<script>
  const videosCollection = document.querySelectorAll("div[videoId]")
  videosToUpdate = [...videosCollection]
  videosToUpdate.forEach(video => {
    video.onclick = (e) => {
      let videoId = video.getAttribute('videoId')
      let title = video.getAttribute('title')
      let description = video.getAttribute('description')
      let thumbnail = video.getAttribute('thumbnail')
      let category = video.getAttribute('category')



      document.getElementById("edit-video-id").value = videoId
      document.getElementById("edit-video-title").value = title
      document.getElementById("edit-video-description").value = description

      let categorySelect = document.getElementById("edit-video-category")
      let categoryOptions = categorySelect.options
      for (let i = 0; i < categoryOptions.length; i++) {
        if (categoryOptions[i].textContent === category) {
          categoryOptions[i].selected = true
          break
        }
      }

      let thumbnailInput = document.getElementById("edit-video-thumbnail")
      thumbnailInput.value = ""
      let thumbnailPreview = document.getElementById("thumbnail-preview")
      if (thumbnail !== null) {
        thumbnailPreview.src = thumbnail
        thumbnailPreview.style.display = "flex";
      } else {
        thumbnailPreview.src = ""
      }

      thumbnailInput.addEventListener("change", function () {
        let file = this.files[0];
        if (file) {
          let reader = new FileReader();
          reader.onload = function (event) {
            thumbnailPreview.src = event.target.result;
          }
          reader.readAsDataURL(file);
        } else {
          thumbnailPreview.src = "";
        }
      });
    }
  })
</script>