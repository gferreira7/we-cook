<div id='upload-form' style='display:none;'>
  <form
    id='upload-video'
    action='/upload'
    method='post'
    enctype='multipart/form-data'
  >

    <div>
      <label class="upload-title">Title </label>
      <div class='video-input'>
        <textarea name='title' type='text' placeholder='Video title'> </textarea>
      </div>
    </div>

    <div>
      <span class="upload-title">Description</span>
      <div class='video-input'>
        <textarea name='description' placeholder='Add a description'></textarea>
      </div>
    </div>

   <div class="d-flex justify-content-evenly align-items-center px-2 mt-2">
     <div class="d-flex flex-column justify-content-between align-items-center w-50 h-100">
        <span class="upload-title pb-2">Cooking time</span>
        <div class='video-input cooking-time d-flex justify-content-between '>
          <input cookTime type="range" min="0" max="7" value="3" name="cookTime">
          <div sliderOutput></div>
        </div>
      </div>

      <div class="d-flex flex-column align-items-center justify-content-between w-50 h-100">
        <span class="upload-title mb-2">Portions</span>
        <div class='video-input'>
          <input type='number' name='portions' />
        </div>
      </div>
   </div>


   
      <div class="upload-title py-2">Ingredients</div>
      <div main-ingredients-container class="d-flex flex-column  px-2">
        <div class='video-input ingredients-input d-flex justify-content-evenly align-items-center'>
            <input
            class="w-25 me-2"
            ingredient
            name='ingredient'
            type='text'
            placeholder='Ingredient name'
          />
          
          <input
            class="w-25 me-2"
            ingredient-quantity
            placeholder='Quantity'
            name='ingredient-quantity'
            type='number'
          />
          <div class='select w-25 h-100 me-2'>
            <select ingredient-unit name='ingredient-unit'>
              <option>unit</option>
              <option>ml</option>
              <option>cl</option>
              <option>dl</option>
              <option>L</option>
              <option selected>g</option>
              <option>kg</option>
              <option>tsp</option>
              <option>tbsp</option>
              <option>cup</option>
            </select>
            <div class='select__arrow'></div>
          </div>
          <button class='btn btn-success px-4' type='button' add-ingredient>+</button>
          <button
            class='btn btn-secondary d-none'
            type='button'

            remove-ingredient
          >X</button>
        </div>
        <div newIngredientsDiv class="py-4">
          <ul newIngredientsUl></ul>

        </div>
      </div>
   
    <div main-steps-container>
      <div class="upload-title">Steps</div>
      <div class='video-input d-flex'>
        <input step-input name='step-input' />
        <button class='btn btn-success w-25' type='button' add-step>+</button>
      </div>
      <div
        new-step-wrapper
        class='d-flex flex-column justify-content-start align-items-start pb-3'
      >
        <div new-steps-container class='d-flex flex-column justify-content-start align-items-start pb-3'></div>
      </div>
    </div>

    <div class="d-flex align-items-center justify-content-evenly">
      <div class="d-flex flex-column align-items-center justify-content-between w-50">
        <span class="upload-title">Category</span>
        <div class='select'>
          <select name='category'>
            <option>Healthy</option>
            <option>Cheat Meal</option>
          </select>
          <div class='select__arrow'></div>
        </div>
      </div>
     <div class="d-flex flex-column align-items-center justify-content-between w-50">
        <span class="upload-title">Meal Type</span>
        
          <div class='select'>
            <select name='mealType'>
              <option active>Breakfast</option>
              <option>Main Course</option>
              <option>Side Dish</option>
              <option>Snack</option>
              <option>Soup</option>
              <option>Appettizer</option>
              <option>Salad</option>
              <option>Drink</option>
            </select>
            <div class='select__arrow'></div>
          </div>
      </div>
    </div>
    <div main-tags-container>
      <div class="upload-title">Tags</div>
      <div class='video-input d-flex'>
        <input tag-input name='tag-input' />
        <button class='btn btn-success w-25' type='button' add-tag>+</button>
      </div>
      <div
        new-tags-wrapper
        class='d-flex flex-column justify-content-start align-items-start pb-3'
      >
        <div new-tags-container class='video-input'></div>
      </div>
    </div>

    <div class='d-flex justify-content-center align-items-start pb-3 w-100'>
      <span class="upload-title">Upload Video file and Thumbnail</span>
    </div>

    <div class='file-drop-area'>
      <span class='fake-btn'>Choose files</span>
      <span class='file-msg js-set-number'>or drag and drop files here</span>
      <input class='file-input' name='video' type='file' id='formFile' />
    </div>

    <div class='file-drop-area'>
      <span class='fake-btn'>Choose files</span>
      <span class='file-msg js-set-number'>or drag and drop files here</span>
      <input class='file-input' name='image' type='file' id='formFile' />
    </div>
    <center>
      <div class='form-text' style='color:gray'>
        Please make sure you're uploading original content
      </div>
    </center>

    <div class='modal-footer d-flex'>
      <button
        closeModalBtn
        class='btn btn-secondary me-4'
        type='button'
      >Cancel</button>
      <button uploadBtn class='btn btn-success' type='submit'>Upload</button>
    </div>
  </form>

</div>

<script>

  window.addEventListener("load", (event) => {
  
  
    //Open and close Upload Form 
    let uploadModal = document.querySelector("div[uploadModal]")
    let form = document.getElementById("upload-video")
    let formContainer = document.getElementById("upload-form")
    formContainer.style.transitionDelay =".1s";
    
    
    uploadModal.onclick = ((event) => {
      if (formContainer.style.display == "none") {
        formContainer.style.display = "flex"
        formContainer.classList.add('anim')
        formContainer.setAttribute("style", "--delay: 0.2s");
        uploadModal.scrollIntoView({behavior:"smooth"})
        const uploadBtn = document.querySelector('button[uploadBtn]')
        const closeModalBtn = document.querySelector('button[closeModalBtn]')
        
        closeModalBtn.onclick = (e) =>{
          formContainer.style.display = "none";
          uploadModal.scrollIntoView({behavior:"smooth"})
        }

  const slider = document.querySelector("input[cookTime]");
  const sliderOutput = document.querySelector('div[sliderOutput]');
  const possibleTimes = ['15m','30m', '45m', '1h', '1h15m','1h30m','1h45m', 'over 2h']

  //default value
  sliderOutput.innerHTML = possibleTimes[slider.value]
// Update the current slider value (each time you drag the slider handle)
  slider.oninput = function() {
    sliderOutput.innerHTML = possibleTimes[slider.value]
  } 

    //INGREDIENTS INPUT

    //Adding new ingredients to Recipe 
    const addIngredientButton = document.querySelector('button[add-ingredient]')
    const newIngredientsUl = document.querySelector('ul[newIngredientsUl]')
    
    addIngredientButton.onclick = (e) => {
    
    // Get current values from form
    const ingredient = document.querySelector('input[ingredient]').value
    const quantity = document.querySelector('input[ingredient-quantity]').value
    const unit = document.querySelector('select[ingredient-unit]').value

    // Clone div and append below
    const ingredientsInput = document.querySelector('.ingredients-input')
    const newIngredientsInput = ingredientsInput.cloneNode(true)
    
    const removeIngredientButton = newIngredientsInput.querySelector('button[remove-ingredient]')
    removeIngredientButton.classList.remove('d-none')
    removeIngredientButton.onclick = (e) => {
      e.target.closest('.new-ingredient').remove()
    }
    
    const newListItem = document.createElement('li')
    newListItem.classList.add('new-ingredient')
    newListItem.setAttribute('quantity', quantity)
    newListItem.setAttribute('newIng', '')
    newListItem.setAttribute('unit', unit)
    newListItem.setAttribute('ingredient', ingredient)

    newListItem.innerHTML = `<div class="added-ingredient"> ðŸ”¸${quantity} ${unit==='unit'?' ': unit + ' of '} ${ingredient}</div>`
    newListItem.appendChild(removeIngredientButton)
    newIngredientsUl.appendChild(newListItem)


    //reset firstline inputs
    const firstInputDiv = document.querySelector('div[main-ingredients-container]').children[0]
    firstInputDiv.querySelector('input[ingredient]').value = ''
    firstInputDiv.querySelector('input[ingredient-quantity]').value = ''
    firstInputDiv.querySelector('select[ingredient-unit]').value = 'g'

  } 
    
    //TAGS

    //Adding new TAGS to Recipe 
    const addTagButton= document.querySelector('button[add-tag]')

    
    addTagButton.onclick = (e) => {
    
    // Get current values from form
    const tagInputDiv = document.querySelector('input[tag-input]')
    const newTag = tagInputDiv.value
        
    //append to the new tags container just below and add remove button   
    const newTagsDiv = document.querySelector('div[new-tags-container]')
    newTagsDiv.classList.add('d-flex', 'justify-content-start', 'align-items-center', 'flex-wrap', 'w-50')


    const newTagItem = document.createElement('div')
    newTagItem.classList.add('new-tag', 'p-2', 'w-25', 'fst-italic')
    newTagItem.setAttribute('tag', newTag)
    newTagItem.innerHTML = '#' + newTag

    const removeTagBtn = document.createElement('button')
    removeTagBtn.type = 'button'
    removeTagBtn.classList.add('btn')
    removeTagBtn.innerHTML = 'X'
    
    removeTagBtn.onclick = (e) => {
            e.target.closest('.new-tag').remove()
    }
       
    newTagItem.appendChild(removeTagBtn)

    //reset tag input
    tagInputDiv.value = ''
    
    newTagsDiv.appendChild(newTagItem)
    
  } 

  //Steps

    //Adding new Steps to Recipe 
    const addStepButton= document.querySelector('button[add-step]')

    addStepButton.onclick = (e) => {
    
    // Get current values from form
    const stepInputDiv = document.querySelector('input[step-input]')
    const newStep = stepInputDiv.value
        
    //append to the new tags container just below and add remove button   
    const newStepsDiv = document.querySelector('div[new-steps-container]')
    newStepsDiv.classList.add('d-flex', 'flex-column', 'justify-content-start', 'align-items-start', 'w-50')

    const newStepItem = document.createElement('div')
    newStepItem.classList.add('new-step', 'p-2', 'w-100', 'justify-content-between', 'd-flex')
    newStepItem.setAttribute('step', newStep )

    newStepItem.innerHTML = newStep

    const removeStepBtn = document.createElement('button')
    removeStepBtn.type = 'button'
    removeStepBtn.classList.add('btn', 'btn-secondary')
    removeStepBtn.innerHTML = 'X'
    
    newStepItem.appendChild(removeStepBtn)

    removeStepBtn.onclick = (e) => {
            e.target.closest('.new-step').remove()
    }
       
    //reset tag input
    stepInputDiv.value = ''
    
    newStepsDiv.appendChild(newStepItem)
    
  } 

  //FILE UPLOADS/DRAG AND DROP
  //Handle file uploads CSS
  let fileinput = document.querySelector('.file-input');
  let filedroparea = document.querySelector('.file-drop-area');
  let jssetnumber = document.querySelector('.js-set-number');
  fileinput.addEventListener('dragenter', isactive);
  fileinput.addEventListener('focus', isactive);
  fileinput.addEventListener('click', isactive);

  // back to normal state
  fileinput.addEventListener('dragleave', isactive);
  fileinput.addEventListener('blur', isactive);
  fileinput.addEventListener('drop', isactive);

  // add Class
  function isactive() {
    filedroparea.classList.add('is-active');
  }

  // change inner text
  fileinput.addEventListener('change', function() {
    let count = fileinput.files.length;
    if (count === 1) {
      // if single file then show file name
      jssetnumber.innerText = fileinput.value.split('\\').pop();
    } else {
      // otherwise show number of files
      jssetnumber.innerText = count + ' files selected';
    }
  });

        //appending tags, steps and ingredients to formData and sending to Backend

        uploadBtn.onclick = (e) => {

          e.preventDefault()

          const ingredientsList = []

          const allIngredientsDOM = document.querySelectorAll('li[newIng]')
          
          allIngs = [...allIngredientsDOM]

          console.log(allIngs )

          allIngs.forEach(ing => {
            
            let ingredient ={}
            ingredient.unit = ing.getAttribute('unit')
            ingredient.quantity = ing.getAttribute('quantity')
            ingredient.ingredient = ing.getAttribute('ingredient')
            
            ingredientsList.push(ingredient)
            console.log(ingredientsList)
          })

          
          const stepsList = []
          
          const allStepsDOM = document.querySelectorAll('div[step]')
          let allSteps = [...allStepsDOM]



          allSteps.forEach(step => {
            stepsList.push(step.getAttribute('step'))
            console.log(stepsList)
          })

          const tagsList = []
          
          const allTagsDOM = document.querySelectorAll('div[tag]')
          let allTags = [...allTagsDOM]



          allTags.forEach(tag => {
            tagsList.push(tag.getAttribute('tag'))
            console.log(allTags)
          })


          let formData = new FormData(form)

          formData.append('ingredientsList', JSON.stringify(ingredientsList));
          formData.append('tagsList', JSON.stringify(tagsList));
          formData.append('stepsList', JSON.stringify(stepsList));
          console.log("Form Sent to DB", formData)
          axios.post(`/upload`, formData, {
                headers: {
                  'Content-Type': 'multipart/form-data'
                }          
            })
            .then((response) => {
               console.log('RES:',response.data);
                window.location.href = `/watch/${response.data}`
            })
            .catch( (error) =>{
                console.log('ERROR',error);
            })
          }  
          

     } else {
        formContainer.style.display = "none";
      }
    })

    
});

</script>